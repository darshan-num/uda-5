version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.0
  aws-cli: circleci/aws-cli@0.1.19
  slack: circleci/slack@3.4.2

commands:
  git_tag:
    description: "Tagging the new commit which will be a result of Branch A --(merge)--> Branch B"
    parameters:
      tag_message:
        type: string

      working_commit:
        type: string

    steps:       
      - run:
          name: Update Tags
          
          command: |
            git tag -a << parameters.tag_message >> << parameters.working_commit >> -m << parameters.tag_message >>
            git push origin << parameters.tag_message >>

jobs:
  build-and-deploy-dev:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - checkout

      - run:
          name: Running jobs
          command: |
            echo "job 1"

  ############# Build and deploy Dev Training #############
  build-and-deploy-dev-training:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - checkout

      - run:
          name: Running jobs
          command: |
            echo "job 1"

  ############# Build and deploy Stage Training #############
  build-and-deploy-stage-training:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - checkout

      - run:
          name: Running jobs
          command: |
            echo "job 1"

  ######################################   TEST  ###################
  build-and-deploy-test:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo

    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "0a:26:cc:b9:5b:0d:b7:3b:93:45:ef:9a:15:be:c8:2a"

      - run:
          name: Running jobs
          command: |
            echo "job 1"

      - git_tag:
          tag_message: test-$CIRCLE_BUILD_NUM
          working_commit: $CIRCLE_SHA1



  ######################################   PRESTAGE  ############################
  build-and-deploy-prestage:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Running jobs
          command: |
            echo "job 1"

      - git_tag:
          tag_message: $CIRCLE_BRANCH-$CIRCLE_BUILD_NUM
          working_commit: $CIRCLE_SHA1


  ###################  STAGE #################################################
  build-and-deploy-stage:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Running jobs
          command: |
            echo "job 1"

      - git_tag:
          tag_message: $CIRCLE_BRANCH-$CIRCLE_BUILD_NUM
          working_commit: $CIRCLE_SHA1


  ######################## ON PR Generation #################################
  build-and-test-PR:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - checkout

      - run:
          name: Running jobs
          command: |
            echo "job 1"
      

workflows:
  version: 2
  BuildAndDeployDev_to_Test:
    jobs:
      - build-and-test-PR:
            filters:
              branches:
                ignore:
                  - develop
                  - master

      - build-and-deploy-dev:
          filters:
            branches:
              only:
                - develop

      - hold_for_approval_dev:
          type: approval
          requires:
            - build-and-deploy-dev

      - build-and-deploy-test:
          filters:
            branches:
              only:
                - develop
          requires:
            - hold_for_approval_dev

  BuildAndDeployRelease_to_Master:
    jobs:
      - build-and-deploy-prestage:
          filters:
            branches:
              only: /^release\/.*/

      - build-and-deploy-stage:
          filters:
            branches:
              only:
                - master

  BuildAndDeployTraining:
    jobs:
      - build-and-deploy-dev-training:
         filters:
           branches:
             only: /^training-dev\/.*/

      - build-and-deploy-stage-training:
         filters:
           branches:
             only: /^training-stage\/.*/
